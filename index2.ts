// 변수에 들어갈 수 있는 것을 미리 정해놓는 것을 Literal Types라고 한다.
let 이름 :'kim'; // 이 변수에는 무조건 'kim'만 들어올 수 있음
let 나이 :123; // 이 변수에는 123 밖에 들어올 수 없음
let 접니다 :'풍성충' | '커플';
접니다 = '커플';

// 함수의 파라미터 자리에 무조건 hello 밖에 들어올 수 없음
// + 리턴값이 무조건 0이나 1밖에 될 수 없음
function 함수(a :'hello') :(1|0){
    return 1
}
함수('hello')

// 가위 바위 보 중에 1개를 파라미터로 받는 함수
// 가위 바위 보만 들어올 수 있는 array를 return 해야함
function 가위바위보(x :('가위' | '바위' | '보')) :('가위'|'바위'|'보')[]{
    return ['가위']
}



var 자료 = {
    name : 'kim'
} as const // as const는 오브젝트의 자료를 완전히 잠가놓고 싶을때 쓰는 명령어. 이거 쓰면 29줄 에러 안남

function 내함수2(a : 'kim'){ // kim이라는 자료만 들어올 수 있습니다(x) kim이라는 타입만 들어올 수 있습니다(o)

}
// 내함수2(자료.name); 자료.name의 타입은 "kim"이 아니라 string이기 때문에 본 코드는 에러가 난다.

// 함수와 methodsㅇ[ type alias 지정하는 방법+
type 함수타입 = (a: string) => number; // 이 함수타입은 파라미터로 항상 문자열이 들어가야하고, 리턴값으로 숫자가 들어가야 한다.

let 함수함수 :함수타입 = function (a){
    return 10    // 함수 타입지정
}